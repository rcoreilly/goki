// Code generated by "stringer -type=TextFieldSignals"; DO NOT EDIT.

package gi

import (
	"fmt"
	"strconv"
)

const _TextFieldSignals_name = "TextFieldDoneTextFieldSignalsN"

var _TextFieldSignals_index = [...]uint8{0, 13, 30}

func (i TextFieldSignals) String() string {
	if i < 0 || i >= TextFieldSignals(len(_TextFieldSignals_index)-1) {
		return "TextFieldSignals(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TextFieldSignals_name[_TextFieldSignals_index[i]:_TextFieldSignals_index[i+1]]
}

func StringToTextFieldSignals(s string) (TextFieldSignals, error) {
	for i := 0; i < len(_TextFieldSignals_index)-1; i++ {
		if s == _TextFieldSignals_name[_TextFieldSignals_index[i]:_TextFieldSignals_index[i+1]] {
			return TextFieldSignals(i), nil
		}
	}
	return 0, fmt.Errorf("String %v is not a valid option for type TextFieldSignals", s)
}
